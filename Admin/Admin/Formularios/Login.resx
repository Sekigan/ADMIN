<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>